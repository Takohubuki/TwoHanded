<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zdh.mappers.TokenMapper">
    <resultMap id="BaseResultMap" type="com.zdh.bean.Token">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="token" jdbcType="VARCHAR" property="token"/>
        <result column="user" jdbcType="VARCHAR" property="user"/>
        <result column="issue_date" jdbcType="TIMESTAMP" property="issueDate"/>
        <result column="expire_date" jdbcType="TIMESTAMP" property="expireDate"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, token, `user`, issue_date, expire_date, `status`
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from token
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="verifyToken" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from token where `user` = #{sid} and token = #{token}
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from token
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.zdh.bean.Token">
    insert into token (id, token, `user`, 
      issue_date, expire_date, `status`
      )
    values (#{id,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, #{user,jdbcType=VARCHAR}, 
      #{issueDate,jdbcType=TIMESTAMP}, #{expireDate,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.zdh.bean.Token">
        insert into token
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="token != null">
                token,
            </if>
            <if test="user != null">
                `user`,
            </if>
            <if test="issueDate != null">
                issue_date,
            </if>
            <if test="expireDate != null">
                expire_date,
            </if>
            <if test="status != null">
                `status`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="token != null">
                #{token,jdbcType=VARCHAR},
            </if>
            <if test="user != null">
                #{user,jdbcType=VARCHAR},
            </if>
            <if test="issueDate != null">
                #{issueDate,jdbcType=TIMESTAMP},
            </if>
            <if test="expireDate != null">
                #{expireDate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zdh.bean.Token">
        update token
        <set>
            <if test="token != null">
                token = #{token,jdbcType=VARCHAR},
            </if>
            <if test="user != null">
                `user` = #{user,jdbcType=VARCHAR},
            </if>
            <if test="issueDate != null">
                issue_date = #{issueDate,jdbcType=TIMESTAMP},
            </if>
            <if test="expireDate != null">
                expire_date = #{expireDate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zdh.bean.Token">
    update token
    set token = #{token,jdbcType=VARCHAR},
      `user` = #{user,jdbcType=VARCHAR},
      issue_date = #{issueDate,jdbcType=TIMESTAMP},
      expire_date = #{expireDate,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="batchUpdateStatus" parameterType="java.util.List">
        <foreach collection="list" separator=";" item="tokenList">
            update token set status = #{tokenList.status} where id = #{tokenList.id}
        </foreach>
    </update>
</mapper>